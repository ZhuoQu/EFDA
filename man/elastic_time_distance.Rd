% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/elastic_time_distance.R
\name{elastic_time_distance}
\alias{elastic_time_distance}
\title{Description of elastic_time_distance.R.
This function returns the distance matrix for the multivariate functional data.
#' See Robust two-layer partition clustering of sparse multivariate functional data,
Zhuo Qu, Wenlin Dai, and Marc G. Genton, https://www.sciencedirect.com/science/article/pii/S2452306223000138
This function implements algorithm 1 in the paper.}
\usage{
elastic_time_distance(pd)
}
\arguments{
\item{pd}{A list. Each sublist is a list with three components: argvals, subj and y. If the data is univariate, y is a vector.
If the data is multivariate, then y is a matrix with |argvals| rows and |variables| columns.}
}
\value{
a non-negative, symmetric distance matrix
}
\description{
Description of elastic_time_distance.R.
This function returns the distance matrix for the multivariate functional data.
#' See Robust two-layer partition clustering of sparse multivariate functional data,
Zhuo Qu, Wenlin Dai, and Marc G. Genton, https://www.sciencedirect.com/science/article/pii/S2452306223000138
This function implements algorithm 1 in the paper.
}
\examples{
library(fda); canada_temp <- t(CanadianWeather$monthlyTemp) ## a matrix of 35 stations and 12 months
 n <- nrow(canada_temp); nt <- ncol(canada_temp); time <- 1:12
 complete_canada.temp_list <- lapply(1:n, function(k) {
 res <- list(argvals = time,
             subj = rep(k, 12), y = canada_temp[k, ])
  return(res)
  })
  dist_complete_canada.temp <- elastic_time_distance(complete_canada.temp_list)


library(fda); canada_temp <- t(CanadianWeather$monthlyTemp) ## a matrix of 35 stations and 12 months
 n <- nrow(canada_temp); nt <- ncol(canada_temp); missing_prob <- 0.3; time <- 1:12
 random_matrix <- matrix(runif(n * nt), nrow = n, ncol = nt)
 missing_mask <- random_matrix <= missing_prob
 sparse_canada.temp_list <- lapply(1:n, function(k) {
 observed <- which(missing_mask[k, ] != TRUE)
 res <- list(argvals = time[observed],
             subj = rep(k, length(observed)), y = canada_temp[k, observed])
  return(res)
  })
  dist_sparse_canada.temp <- elastic_time_distance(sparse_canada.temp_list)

canada_temp <- t(CanadianWeather$monthlyTemp) ## a matrix of 35 stations and 12 months
 canada_precip <- t(CanadianWeather$monthlyPrecip) ## a matrix of 35 stations and 12 months
 complete_canada_list <- lapply(1:n, function(k) {
 res <- list(argvals = time,
             subj = rep(k, 12), y = cbind(canada_temp[k, ], canada_precip[k, ]))
  return(res)
  })
  dist_complete_canada <- elastic_time_distance(complete_canada_list)
canada_temp <- t(CanadianWeather$monthlyTemp) ## a matrix of 35 stations and 12 months
 canada_precip <- t(CanadianWeather$monthlyPrecip) ## a matrix of 35 stations and 12 months
 sparse_canada_list <- lapply(1:n, function(k) {
 observed_loc <- sort(sample.int(12, size = 9, replace = FALSE))
 res <- list(argvals = time[observed_loc],
             subj = rep(k, 9), y = cbind(canada_temp[k, observed_loc], canada_precip[k, observed_loc]))
  return(res)
  })
  dist_sparse_canada <- elastic_time_distance(sparse_canada_list)
}
