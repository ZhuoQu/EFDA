% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bootstrap_mfpca.R
\name{bootstrap_mfpca}
\alias{bootstrap_mfpca}
\title{Description of bootstrap_mfpca.R.
A function to estimate the univariate functional data/multivariate functional data with the time grid and the original data.}
\usage{
bootstrap_mfpca(argval, true_data = NULL, sparse_data, isbootstrap)
}
\arguments{
\item{argval}{A list of numeric vectors or a single numeric vector, giving the sampling points in the domains. It has the same
definition as in the funData function in the package "funData".}

\item{true_data}{If data is a simulated functional data, true_data is a list of p (the number of variables), and each sublist is a matrix
with n (the number of observations) rows and length(argval) columns. If data comes from the real data with missing values, then true_data = NULL.
By default, true_data = NULL.}

\item{sparse_data}{sparse_data is a list of p (the number of variables), and each sublist is a matrix
with n (the number of observations) rows and length(argval) columns. NA is allowed in each sublist.}

\item{isbootstrap}{is a logical variable of whether to apply bootstrap in the functional principal component analysis.}
}
\value{
The result is a list of 3 elements.
1. fit. This is the same data structure as the sparse_data in the argument.
2. sample_index. This is the sampling index from the population. If isbootstrap = False, sample_index is 1:n. Otherwise, it is the random sampling from
the population with replacement.
3. mrse: is the summation of square of residuals / summation of square of the original data.
}
\description{
Description of bootstrap_mfpca.R.
A function to estimate the univariate functional data/multivariate functional data with the time grid and the original data.
}
\examples{
library(refund); list("cd4"); argval <- -18:42;
bootstrap_mfpca(argval, true_data = NULL, sparse_data = cd4, isbootstrap = TRUE)
library(fda)
canada_temp <- t(CanadianWeather$monthlyTemp) ## a matrix of 35 stations and 12 months
canada_precip <- t(CanadianWeather$monthlyPrecip) ## a matrix of 35 stations and 12 months
true_data <- list(temp = canada_temp, precip = canada_precip);
n <- nrow(canada_temp); nt <- ncol(canada_temp); missing_prob <- 0.3; argval <- 1:12
random_matrix <- matrix(runif(n * nt), nrow = n, ncol = nt)
missing_mask <- random_matrix <= missing_prob
sparse_data <- lapply(true_data, function(k) {
 k[missing_mask] <- NA
 return(k)
})
bootstrap_mfpca(argval, true_data,sparse_data, isbootstrap = TRUE)
}
