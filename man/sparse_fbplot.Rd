% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sparse_fbplot.R
\name{sparse_fbplot}
\alias{sparse_fbplot}
\title{Description of sparse_fbplot.R.
This function visualizes the functional data with sparse functional boxplot.
When the original data is complete, the sparse functional boxplot becomes functional boxplot.
When the original data is sparse, the sparse functional boxplot shows the sparseness proportion information
in the central region.}
\usage{
sparse_fbplot(
  fit,
  sparse,
  time_index = NULL,
  depth = NULL,
  two_stage = TRUE,
  sq_vo = FALSE,
  plot = TRUE,
  xlab = NULL,
  ylab = NULL,
  title = NULL,
  yrange = NULL,
  cex.main = 0.9,
  cex.lab = 0.85,
  cex.axis = 0.85,
  medlabel = TRUE,
  outlabel = TRUE,
  prob = 0.5,
  factor = 1.5,
  outliercolor.fb = 2,
  barcol = 4,
  outliercolor.dir = 3,
  fullout = FALSE
)
}
\arguments{
\item{fit}{depicts the fitted data. fit is a list with p (the number of variables). And each list is a n*t matrix, where n is the number of
observations, and t is the number of the time grid.}

\item{sparse}{depicts the original data. sparse is a list with p (the number of variables). And each list is a n*t matrix, where n is the number of
observations, and t is the number of the time grid.}

\item{time_index}{is the coordinate of time or index. If not given, 1,...length(x) is provided.
By default, time_index = NULL.}

\item{depth}{is the depth value for n observations.}

\item{two_stage}{is a logical variable of whether to obtain the two-stage sparse functional boxplot or
the sparse functional boxplot. By default, two-stage = TRUE.}

\item{sq_vo}{is a condition of whether to apply the square root procedure for variational outlyingness.
By default, sq_vo = FALSE.}

\item{plot}{is a logical variable of whether to obtain a figure. By default, plot = TRUE.}

\item{xlab}{is the title of the x-axis.}

\item{ylab}{is the title of the y-axis.}

\item{title}{is the title of the figure.}

\item{yrange}{is the range of y axis.}

\item{cex.main}{is the magnification to be used for the title.}

\item{cex.lab}{is the magnification to be used for the label.}

\item{cex.axis}{is the magnification to be used for the axis.}

\item{medlabel}{is a logical variable of whether to show the index of the median curve.
By default, medlabel = TRUE.}

\item{outlabel}{is a logical variable of whether to show the index of the median curve.
By default, outlabel = TRUE.}

\item{prob}{shows the central region of some probability. By default, prob = 0.5.}

\item{factor}{is a threshold factor to detect outliers. By default, factor = 1.5.}

\item{outliercolor.fb}{is the color for functional outliers. By default, outliercolor.fb = 2.}

\item{barcol}{is the colour of the mincurve and maxcurve. By default, barcol = 4.}

\item{outliercolor.dir}{is the color for functional directional outliers.
By default, outliercolor.dir = 3.}

\item{fullout}{is a logical variable of whether to show the full outliers in the plot.}
}
\value{
plot the sparse functional boxplot.
The result is a list of four elements.
1. sparse_density_ct is a list of p.
Each list is matrix of t rows and 2 columns, where the first column shows the observation proportion,
and the second column shows the sparse proportion at this time point.
2. fb_outlier_index is a list of p. In each list, it shows the outlier from functional boxplot if any
3. dir_outlier_index is a vector showing possible outliers from the directional outlyingness
4. med_index is a index showing the index of the median, which is the observation
with the highest depth excluding the directional outlier.
}
\description{
Description of sparse_fbplot.R.
This function visualizes the functional data with sparse functional boxplot.
When the original data is complete, the sparse functional boxplot becomes functional boxplot.
When the original data is sparse, the sparse functional boxplot shows the sparseness proportion information
in the central region.
}
\examples{
library(fda)
library(roahd)
canada_temp <- t(CanadianWeather$monthlyTemp)
sparse_fbplot(fit = canada_temp,
             sparse = canada_temp,
             time_index = 1:12, depth = MBD(canada_temp))
 library(refund); list("cd4"); argval <- -18:42;
 bootstrap_cd4 <- bootstrap_implementation(bootstrap_times = 100, argval = -18:42, true_data = NULL, sparse_data = cd4, confid_alpha = 0.05)
fit_cd4 <- bootstrap_cd4$bootstrap_fit[[1]]
 depth_cd4 <- MBD(fit_cd4) ## modified band depth
 sparse_fbplot(fit_cd4, sparse = cd4, time_index = NULL, depth = depth_cd4)
 library(fda); library(mrfDepth)
 canada_temp <- t(CanadianWeather$monthlyTemp) ## a matrix of 35 stations and 12 months
 canada_precip <- t(CanadianWeather$monthlyPrecip) ## a matrix of 35 stations and 12 months
 true_canada <- list(temp = canada_temp, precip = canada_precip);
 n <- nrow(canada_temp); nt <- ncol(canada_temp); missing_prob <- 0.3; argval <- 1:12
 canada_array <- array(NA, dim = c(nt, n, 2)); canada_array[, , 1] <- t(canada_temp); canada_array[, , 2] <- t(canada_precip);
 mfd_canada <- mfd(x = canada_array, z = canada_array, type = "sdepth")
 sparse_fbplot(fit = true_canada, sparse = true_canada, time_index = NULL, depth = as.numeric(mfd_canada$MFDdepthZ))
 library(fda);
 canada_temp <- t(CanadianWeather$monthlyTemp) ## a matrix of 35 stations and 12 months
 canada_precip <- t(CanadianWeather$monthlyPrecip) ## a matrix of 35 stations and 12 months
 true_canada <- list(temp = canada_temp, precip = canada_precip);
 n <- nrow(canada_temp); nt <- ncol(canada_temp); missing_prob <- 0.3; argval <- 1:12
 random_matrix <- matrix(runif(n * nt), nrow = n, ncol = nt)
 missing_mask <- random_matrix <= missing_prob
 sparse_canada <- lapply(true_canada, function(k) {
  k[missing_mask] <- NA
  return(k)
  })
  bt_canada <- bootstrap_implementation(bootstrap_times = 100, argval,
  true_data = true_canada, sparse_data = sparse_canada, confid_alpha = 0.05)
 fit_canada <- bt_canada$bootstrap_fit
 fit_canada_array <- array(NA, dim = c(nt, n, 2));
 fit_canada_array[, , 1] <- t(fit_canada[[1]]); fit_canada_array[, , 2] <- t(fit_canada[[2]]);
 mfd_fit_canada <- mfd(x = fit_canada_array, z = fit_canada_array, type = "sdepth")
 sparse_fbplot(fit = fit_canada, sparse = sparse_canada,
               time_index = NULL, depth = as.numeric(mfd_fit_canada$MFDdepthZ))
}
